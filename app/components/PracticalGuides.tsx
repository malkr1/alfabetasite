'use client'
import React, { useState } from 'react'
import { motion, AnimatePresence } from 'framer-motion'

export default function PracticalGuides() {
  const [expandedSections, setExpandedSections] = useState<string[]>([])

  const toggleSection = (section: string) => {
    setExpandedSections(prev => 
      prev.includes(section) 
        ? prev.filter(s => s !== section)
        : [...prev, section]
    )
  }

  const guides = {
    combinations: [
      {
        title: '–î–ª—è —Å–∏–ª–æ–≤—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫',
        items: [
          '–ö—Ä–µ–∞—Ç–∏–Ω (5–≥) –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å —É–≥–ª–µ–≤–æ–¥–∞–º–∏',
          '–ö–æ—Ñ–µ–∏–Ω (200–º–≥) –∏–ª–∏ –ø—Ä–µ–¥—Ç—Ä–µ–Ω –∑–∞ 30-40 –º–∏–Ω—É—Ç –¥–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
          '–ü—Ä–æ—Ç–µ–∏–Ω (25-30–≥) + –ö—Ä–µ–∞—Ç–∏–Ω (5–≥) –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
          'BCAA (5-10–≥) –≤–æ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
          '–¶–∏—Ç—Ä—É–ª–ª–∏–Ω –º–∞–ª–∞—Ç (6-8–≥) + –ë–µ—Ç–∞-–∞–ª–∞–Ω–∏–Ω (3-4–≥) –ø–µ—Ä–µ–¥ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–æ–π'
        ],
        icon: 'üí™'
      },
      {
        title: '–î–ª—è –∂–∏—Ä–æ—Å–∂–∏–≥–∞–Ω–∏—è',
        items: [
          'L-–∫–∞—Ä–Ω–∏—Ç–∏–Ω (2–≥) + –ö–æ—Ñ–µ–∏–Ω (200–º–≥) –∑–∞ 30-40 –º–∏–Ω—É—Ç –¥–æ –∫–∞—Ä–¥–∏–æ',
          'BCAA (5-10–≥) –≤–æ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–∞—Ç–æ—â–∞–∫',
          '–ü—Ä–æ—Ç–µ–∏–Ω (20-25–≥) –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
          '–û–º–µ–≥–∞-3 (2–≥) + –í–∏—Ç–∞–º–∏–Ω D (2000-4000 –ú–ï) —Å –∑–∞–≤—Ç—Ä–∞–∫–æ–º',
          '–≠–ª–µ–∫—Ç—Ä–æ–ª–∏—Ç—ã + BCAA –ø—Ä–∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–º –∫–∞—Ä–¥–∏–æ'
        ],
        icon: 'üî•'
      },
      {
        title: '–î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è',
        items: [
          '–ü—Ä–æ—Ç–µ–∏–Ω (30–≥) + –≠–ª–µ–∫—Ç—Ä–æ–ª–∏—Ç—ã —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
          'BCAA (5–≥) + –ì–ª—é—Ç–∞–º–∏–Ω (5–≥) + ZMA –ø–µ—Ä–µ–¥ —Å–Ω–æ–º',
          '–û–º–µ–≥–∞-3 (2-3–≥) + –ö—É—Ä–∫—É–º–∏–Ω –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –≤–æ—Å–ø–∞–ª–µ–Ω–∏—è',
          '–í–∏—Ç–∞–º–∏–Ω D (2000-4000 –ú–ï) + K2 (100–º–∫–≥) —É—Ç—Ä–æ–º',
          '–ú–∞–≥–Ω–∏–π (300-400–º–≥) + –¶–∏–Ω–∫ (15–º–≥) –ø–µ—Ä–µ–¥ —Å–Ω–æ–º'
        ],
        icon: 'üîÑ'
      }
    ],
    timing: [
      {
        title: '–£—Ç—Ä–æ',
        items: [
          '–í–∏—Ç–∞–º–∏–Ω D —Å –∂–∏—Ä–Ω–æ–π –ø–∏—â–µ–π',
          '–û–º–µ–≥–∞-3 —Å –∑–∞–≤—Ç—Ä–∞–∫–æ–º',
          '–ö—Ä–µ–∞—Ç–∏–Ω (–º–æ–∂–Ω–æ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è)',
          'L-–∫–∞—Ä–Ω–∏—Ç–∏–Ω –∑–∞ 30-40 –º–∏–Ω—É—Ç –¥–æ —É—Ç—Ä–µ–Ω–Ω–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏'
        ],
        icon: 'üåÖ'
      },
      {
        title: '–î–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
        items: [
          '–ü—Ä–µ–¥—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å –∑–∞ 20-30 –º–∏–Ω—É—Ç',
          '–ò–õ–ò –∫–æ—Ñ–µ–∏–Ω –∑–∞ 30-40 –º–∏–Ω—É—Ç (–Ω–µ —Å–æ–≤–º–µ—â–∞—Ç—å!)',
          '–¶–∏—Ç—Ä—É–ª–ª–∏–Ω –º–∞–ª–∞—Ç –∑–∞ 30-40 –º–∏–Ω—É—Ç',
          'L-–∫–∞—Ä–Ω–∏—Ç–∏–Ω –∑–∞ 60 –º–∏–Ω—É—Ç (—Å —É–≥–ª–µ–≤–æ–¥–∞–º–∏)'
        ],
        icon: '‚è∞'
      },
      {
        title: '–í–æ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
        items: [
          'BCAA –ø—Ä–∏ –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö',
          '–≠–ª–µ–∫—Ç—Ä–æ–ª–∏—Ç—ã –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã',
          '–ë—ã—Å—Ç—Ä—ã–µ —É–≥–ª–µ–≤–æ–¥—ã –ø—Ä–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö >1.5 —á–∞—Å–∞',
          '–í–æ–¥–∞ 200-300 –º–ª –∫–∞–∂–¥—ã–µ 15-20 –º–∏–Ω—É—Ç'
        ],
        icon: 'üèãÔ∏è'
      },
      {
        title: '–ü–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
        items: [
          '–ü—Ä–æ—Ç–µ–∏–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç',
          '–≠–ª–µ–∫—Ç—Ä–æ–ª–∏—Ç—ã –¥–ª—è –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ—Ç–µ—Ä—å',
          '–ö—Ä–µ–∞—Ç–∏–Ω —Å —É–≥–ª–µ–≤–æ–¥–∞–º–∏ (—á–µ—Ä–µ–∑ 2 —á–∞—Å–∞ –ø–æ—Å–ª–µ –∫–æ—Ñ–µ–∏–Ω–∞)',
          '–ö–æ–º–ø–ª–µ–∫—Å –∞–º–∏–Ω–æ–∫–∏—Å–ª–æ—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è'
        ],
        icon: 'üîÑ'
      }
    ],
    incompatible: [
      {
        combination: '–ö–æ—Ñ–µ–∏–Ω + –ü—Ä–µ–¥—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å',
        reason: '–†–∏—Å–∫ –ø–µ—Ä–µ—Å—Ç–∏–º—É–ª—è—Ü–∏–∏ –∏ —Ç–∞—Ö–∏–∫–∞—Ä–¥–∏–∏',
        icon: '‚ö†Ô∏è'
      },
      {
        combination: '–ö—Ä–µ–∞—Ç–∏–Ω + –ö–æ—Ñ–µ–∏–Ω (–æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ)',
        reason: '–ö–æ—Ñ–µ–∏–Ω –º–æ–∂–µ—Ç —Å–Ω–∏–∂–∞—Ç—å —É—Å–≤–æ–µ–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–Ω–∞',
        icon: '‚ö†Ô∏è'
      },
      {
        combination: '–í—ã—Å–æ–∫–∏–µ –¥–æ–∑—ã —Ü–∏–Ω–∫–∞ + –∂–µ–ª–µ–∑–æ',
        reason: '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è –∑–∞ –≤—Å–∞—Å—ã–≤–∞–Ω–∏–µ, –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 2-3 —á–∞—Å–∞',
        icon: '‚ö†Ô∏è'
      },
      {
        combination: '–ö–∞–ª—å—Ü–∏–π + –ñ–µ–ª–µ–∑–æ',
        reason: '–ö–∞–ª—å—Ü–∏–π —Å–Ω–∏–∂–∞–µ—Ç —É—Å–≤–æ–µ–Ω–∏–µ –∂–µ–ª–µ–∑–∞, –∏–Ω—Ç–µ—Ä–≤–∞–ª 2 —á–∞—Å–∞',
        icon: '‚ö†Ô∏è'
      },
      {
        combination: '–ú–∞–≥–Ω–∏–π + –ö–∞–ª—å—Ü–∏–π (–≤—ã—Å–æ–∫–∏–µ –¥–æ–∑—ã)',
        reason: '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è –∑–∞ –≤—Å–∞—Å—ã–≤–∞–Ω–∏–µ, –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è',
        icon: '‚ö†Ô∏è'
      }
    ],
    myths: [
      {
        myth: 'BCAA —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ –ø—Ä–æ—Ç–µ–∏–Ω–∞',
        fact: '–ü—Ä–æ—Ç–µ–∏–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∞–º–∏–Ω–æ–∫–∏—Å–ª–æ—Ç—ã, –≤–∫–ª—é—á–∞—è BCAA',
        icon: 'ü§î'
      },
      {
        myth: '–ü—Ä–æ—Ç–µ–∏–Ω –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –Ω–∞–±–æ—Ä—É –∂–∏—Ä–∞',
        fact: '–ò–∑–±—ã—Ç–æ–∫ –∫–∞–ª–æ—Ä–∏–π –≤—ã–∑—ã–≤–∞–µ—Ç –Ω–∞–±–æ—Ä –≤–µ—Å–∞, –∞ –Ω–µ —Å–∞–º –ø—Ä–æ—Ç–µ–∏–Ω',
        icon: 'ü§î'
      },
      {
        myth: '–≠–ª–µ–∫—Ç—Ä–æ–ª–∏—Ç—ã –Ω—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ –ª–µ—Ç–æ–º',
        fact: '–û–Ω–∏ —Ç–µ—Ä—è—é—Ç—Å—è —Å –ø–æ—Ç–æ–º –ø—Ä–∏ –ª—é–±–æ–π –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ',
        icon: 'ü§î'
      },
      {
        myth: '–ö—Ä–µ–∞—Ç–∏–Ω –Ω—É–∂–Ω–æ —Ü–∏–∫–ª–∏—Ç—å',
        fact: '–ë–µ–∑–æ–ø–∞—Å–µ–Ω –ø—Ä–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º –ø—Ä–∏–µ–º–µ, —Ü–∏–∫–ª–∏—á–Ω–æ—Å—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞',
        icon: 'ü§î'
      },
      {
        myth: 'L-–∫–∞—Ä–Ω–∏—Ç–∏–Ω —Å–∂–∏–≥–∞–µ—Ç –∂–∏—Ä –±–µ–∑ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫',
        fact: '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–µ–Ω —Ç–æ–ª—å–∫–æ –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏',
        icon: 'ü§î'
      },
      {
        myth: '–ü—Ä–µ–¥—Ç—Ä–µ–Ω –Ω—É–∂–µ–Ω –Ω–∞ –∫–∞–∂–¥–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ',
        fact: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ä—ã–≤—ã –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–∏–≤—ã–∫–∞–Ω–∏—è',
        icon: 'ü§î'
      },
      {
        myth: '–ë–æ–ª—å—à–µ –¥–æ–±–∞–≤–æ–∫ - –ª—É—á—à–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
        fact: '–í–∞–∂–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –∏ –¥–æ–∑–∏—Ä–æ–≤–∫–∞, –∞ –Ω–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ',
        icon: 'ü§î'
      }
    ],
    tips: [
      {
        title: '–•—Ä–∞–Ω–µ–Ω–∏–µ',
        items: [
          '–û–º–µ–≥–∞-3 —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ',
          '–ü—Ä–æ—Ç–µ–∏–Ω –≤ —Å—É—Ö–æ–º –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ–º –º–µ—Å—Ç–µ',
          '–ö—Ä–µ–∞—Ç–∏–Ω –≤ –≥–µ—Ä–º–µ—Ç–∏—á–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–µ',
          '–í–∏—Ç–∞–º–∏–Ω—ã –≤ —Ç—ë–º–Ω–æ–º –º–µ—Å—Ç–µ'
        ],
        icon: 'üì¶'
      },
      {
        title: '–ü—Ä–∏–∑–Ω–∞–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞',
        items: [
          '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∫–∞—á–µ—Å—Ç–≤–∞',
          '–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Å–æ—Å—Ç–∞–≤',
          '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ –∑–∞–ø–∞—Ö–∞',
          '–°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏'
        ],
        icon: '‚úÖ'
      },
      {
        title: '–≠–∫–æ–Ω–æ–º–∏—è',
        items: [
          '–ü–æ–∫—É–ø–∫–∞ –±–æ–ª—å—à–∏—Ö —É–ø–∞–∫–æ–≤–æ–∫',
          '–ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏',
          '–ü—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏',
          '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ü–µ–Ω –∑–∞ –ø–æ—Ä—Ü–∏—é'
        ],
        icon: 'üí∞'
      },
      {
        title: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–∏–µ–º–∞',
        items: [
          '–í–µ–¥–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–∏–∫–∞ –¥–æ–±–∞–≤–æ–∫',
          '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–∞–π–º–µ—Ä–æ–≤',
          '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ—Ä—Ü–∏–π –∑–∞—Ä–∞–Ω–µ–µ',
          '–ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö/–ø–∞—Å—Å–∏–≤–Ω—ã—Ö —Ñ–∞–∑'
        ],
        icon: 'üìù'
      }
    ],
    individual: [
      {
        title: '–ù–∞—á–∏–Ω–∞—é—â–∏–º',
        items: [
          '–ù–∞—á–∏–Ω–∞—Ç—å —Å –±–∞–∑–æ–≤—ã—Ö –¥–æ–±–∞–≤–æ–∫ (–ø—Ä–æ—Ç–µ–∏–Ω, –∫—Ä–µ–∞—Ç–∏–Ω)',
          '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –æ–¥–Ω–æ–π –¥–æ–±–∞–≤–∫–µ –∑–∞ —Ä–∞–∑',
          '–ù–∞—á–∏–Ω–∞—Ç—å —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –¥–æ–∑–∏—Ä–æ–≤–æ–∫',
          '–í–µ—Å—Ç–∏ –¥–Ω–µ–≤–Ω–∏–∫ —Ä–µ–∞–∫—Ü–∏–π –æ—Ä–≥–∞–Ω–∏–∑–º–∞'
        ],
        icon: 'üå±'
      },
      {
        title: '–û–ø—ã—Ç–Ω—ã–º',
        items: [
          '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –¥–æ–±–∞–≤–∫–∞–º',
          '–¶–∏–∫–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö',
          '–ü–µ—Ä–∏–æ–¥–∏–∑–∞—Ü–∏—è –ø—Ä–∏–µ–º–∞ –¥–æ–±–∞–≤–æ–∫',
          '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤'
        ],
        icon: 'ÔøΩÔøΩ'
      },
      {
        title: '–ñ–µ–Ω—â–∏–Ω–∞–º',
        items: [
          '–ü–æ–≤—ã—à–µ–Ω–Ω–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –∂–µ–ª–µ–∑—É –∏ –∫–∞–ª—å—Ü–∏—é',
          '–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –¥–æ–∑–∏—Ä–æ–≤–æ–∫ —Å —É—á–µ—Ç–æ–º –º–∞—Å—Å—ã —Ç–µ–ª–∞',
          '–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–∏–µ–º–∞ –≤–æ –≤—Ä–µ–º—è –ö–î',
          '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∂–∏—Ä–æ—Å–∂–∏–≥–∞—Ç–µ–ª–∏'
        ],
        icon: 'üë©'
      },
      {
        title: '40+ –ª–µ—Ç',
        items: [
          '–ê–∫—Ü–µ–Ω—Ç –Ω–∞ —Å—É—Å—Ç–∞–≤–Ω—ã–µ –¥–æ–±–∞–≤–∫–∏',
          '–£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –¥–æ–∑—ã –≤–∏—Ç–∞–º–∏–Ω–∞ D',
          '–ö–æ—ç–Ω–∑–∏–º Q10 –¥–ª—è —ç–Ω–µ—Ä–≥–∏–∏',
          '–ö–æ–Ω—Ç—Ä–æ–ª—å –∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è'
        ],
        icon: '‚è≥'
      }
    ],
    sideEffects: [
      {
        effect: '–ü—Ä–æ–±–ª–µ–º—ã —Å –∂–µ–ª—É–¥–∫–æ–º',
        solution: '–ü—Ä–∏–Ω–∏–º–∞—Ç—å —Å –µ–¥–æ–π, —Ä–∞–∑–¥–µ–ª–∏—Ç—å –¥–æ–∑–∏—Ä–æ–≤–∫—É, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–µ—Ä–º–µ–Ω—Ç—ã',
        icon: 'ü§¢'
      },
      {
        effect: '–ù–∞—Ä—É—à–µ–Ω–∏—è —Å–Ω–∞',
        solution: '–ù–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å—Ç–∏–º—É–ª—è—Ç–æ—Ä—ã –ø–æ—Å–ª–µ 16:00, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∞–≥–Ω–∏–π –≤–µ—á–µ—Ä–æ–º',
        icon: 'ÔøΩÔøΩ'
      },
      {
        effect: '–û–±–µ–∑–≤–æ–∂–∏–≤–∞–Ω–∏–µ',
        solution: '–£–≤–µ–ª–∏—á–∏—Ç—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≤–æ–¥—ã, –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–ª–∏—Ç—ã',
        icon: 'üíß'
      },
      {
        effect: '–ü–æ–≤—ã—à–µ–Ω–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ',
        solution: '–°–Ω–∏–∑–∏—Ç—å –¥–æ–∑–∏—Ä–æ–≤–∫–∏ —Å—Ç–∏–º—É–ª—è—Ç–æ—Ä–æ–≤, –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –≤—Ä–∞—á–æ–º',
        icon: '‚ù§Ô∏è'
      }
    ],
    goals: [
      {
        title: '–ù–∞–±–æ—Ä –º–∞—Å—Å—ã',
        items: [
          '–ü—Ä–æ—Ç–µ–∏–Ω 1.6-2.2–≥/–∫–≥ –º–∞—Å—Å—ã —Ç–µ–ª–∞',
          '–ö—Ä–µ–∞—Ç–∏–Ω 5–≥ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
          '–ì–µ–π–Ω–µ—Ä –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–∞–ª–æ—Ä–∏–π',
          'BCAA 5-10–≥ –≤–æ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏'
        ],
        icon: 'üí™'
      },
      {
        title: '–ü–æ—Ö—É–¥–µ–Ω–∏–µ',
        items: [
          'L-–∫–∞—Ä–Ω–∏—Ç–∏–Ω –¥–æ –∫–∞—Ä–¥–∏–æ',
          '–ü—Ä–æ—Ç–µ–∏–Ω –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º—ã—à—Ü',
          'CLA —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –ø—Ä–∏–µ–º–∞–º–∏ –ø–∏—â–∏',
          '–ó–µ–ª–µ–Ω—ã–π —á–∞–π –¥–ª—è –º–µ—Ç–∞–±–æ–ª–∏–∑–º–∞'
        ],
        icon: 'üî•'
      },
      {
        title: '–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å',
        items: [
          '–ë–µ—Ç–∞-–∞–ª–∞–Ω–∏–Ω 3-5–≥/–¥–µ–Ω—å',
          '–≠–ª–µ–∫—Ç—Ä–æ–ª–∏—Ç—ã –≤–æ –≤—Ä–µ–º—è –Ω–∞–≥—Ä—É–∑–æ–∫',
          '–¶–∏—Ç—Ä—É–ª–ª–∏–Ω –º–∞–ª–∞—Ç –¥–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
          'BCAA –¥–ª—è –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫'
        ],
        icon: 'üèÉ'
      },
      {
        title: '–ü–æ—Å–ª–µ —Ç—Ä–∞–≤–º',
        items: [
          '–ö–æ–ª–ª–∞–≥–µ–Ω + –í–∏—Ç–∞–º–∏–Ω C',
          '–û–º–µ–≥–∞-3 –≤ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π –¥–æ–∑–µ',
          '–ì–ª—é–∫–æ–∑–∞–º–∏–Ω + –•–æ–Ω–¥—Ä–æ–∏—Ç–∏–Ω',
          '–ö—É—Ä–∫—É–º–∏–Ω –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –≤–æ—Å–ø–∞–ª–µ–Ω–∏—è'
        ],
        icon: 'üè•'
      }
    ]
  }

  const sectionVariants = {
    hidden: { opacity: 0, height: 0 },
    visible: { 
      opacity: 1, 
      height: 'auto',
      transition: { duration: 0.5, ease: 'easeInOut' }
    }
  }

  const itemVariants = {
    hidden: { opacity: 0, x: -20 },
    visible: { 
      opacity: 1, 
      x: 0,
      transition: { duration: 0.3 }
    }
  }

  return (
    <div className="space-y-8">
      {/* –ö–∞–∫ —Å–æ—á–µ—Ç–∞—Ç—å –¥–æ–±–∞–≤–∫–∏ */}
      <motion.div className="bg-gray-800/80 backdrop-blur-sm rounded-xl p-6 shadow-lg 
        border border-transparent hover:border-blue-500/30 transition-all duration-300">
        <button
          onClick={() => toggleSection('combinations')}
          className="w-full text-left mb-4 flex items-center justify-between"
        >
          <h3 className="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r 
            from-blue-400 to-purple-400">
            –ö–∞–∫ —Å–æ—á–µ—Ç–∞—Ç—å –¥–æ–±–∞–≤–∫–∏
          </h3>
          <span className="text-gray-200">
            {expandedSections.includes('combinations') ? '‚ñº' : '‚ñ∂'}
          </span>
        </button>
        <AnimatePresence>
          {expandedSections.includes('combinations') && (
            <motion.div
              variants={sectionVariants}
              initial="hidden"
              animate="visible"
              exit="hidden"
            >
              <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                {guides.combinations.map((combo, index) => (
                  <motion.div
                    key={combo.title}
                    variants={itemVariants}
                    initial="hidden"
                    animate="visible"
                    transition={{ delay: index * 0.1 }}
                    className="bg-gradient-to-br from-blue-900/30 to-purple-900/30 
                      rounded-lg p-4 border border-blue-500/20"
                  >
                    <div className="text-3xl mb-2">{combo.icon}</div>
                    <h4 className="font-semibold mb-2 text-gray-100">{combo.title}</h4>
                    <ul className="space-y-2">
                      {combo.items.map((item, i) => (
                        <li key={i} className="text-gray-300 flex items-start">
                          <span className="mr-2">‚Ä¢</span>
                          {item}
                        </li>
                      ))}
                    </ul>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.div>

      {/* –í—Ä–µ–º—è –ø—Ä–∏–µ–º–∞ */}
      <motion.div className="bg-gray-800/80 backdrop-blur-sm rounded-xl p-6 shadow-lg 
        border border-transparent hover:border-green-500/30 transition-all duration-300">
        <button
          onClick={() => toggleSection('timing')}
          className="w-full text-left mb-4 flex items-center justify-between"
        >
          <h3 className="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r 
            from-green-400 to-teal-400">
            –í—Ä–µ–º—è –ø—Ä–∏–µ–º–∞
          </h3>
          <span className="text-gray-200">
            {expandedSections.includes('timing') ? '‚ñº' : '‚ñ∂'}
          </span>
        </button>
        <AnimatePresence>
          {expandedSections.includes('timing') && (
            <motion.div
              variants={sectionVariants}
              initial="hidden"
              animate="visible"
              exit="hidden"
            >
              <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
                {guides.timing.map((time, index) => (
                  <motion.div
                    key={time.title}
                    variants={itemVariants}
                    initial="hidden"
                    animate="visible"
                    transition={{ delay: index * 0.1 }}
                    className="bg-gradient-to-br from-green-900/30 to-teal-900/30 
                      rounded-lg p-4 border border-green-500/20"
                  >
                    <div className="text-3xl mb-2">{time.icon}</div>
                    <h4 className="font-semibold mb-2 text-gray-100">{time.title}</h4>
                    <ul className="space-y-2">
                      {time.items.map((item, i) => (
                        <li key={i} className="text-gray-300 flex items-start">
                          <span className="mr-2">‚Ä¢</span>
                          {item}
                        </li>
                      ))}
                    </ul>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.div>

      {/* –ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ */}
      <motion.div className="bg-gray-800/80 backdrop-blur-sm rounded-xl p-6 shadow-lg 
        border border-transparent hover:border-red-500/30 transition-all duration-300">
        <button
          onClick={() => toggleSection('incompatible')}
          className="w-full text-left mb-4 flex items-center justify-between"
        >
          <h3 className="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r 
            from-red-400 to-orange-400">
            –ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
          </h3>
          <span className="text-gray-200">
            {expandedSections.includes('incompatible') ? '‚ñº' : '‚ñ∂'}
          </span>
        </button>
        <AnimatePresence>
          {expandedSections.includes('incompatible') && (
            <motion.div
              variants={sectionVariants}
              initial="hidden"
              animate="visible"
              exit="hidden"
            >
              <div className="grid gap-6 md:grid-cols-2">
                {guides.incompatible.map((item, index) => (
                  <motion.div
                    key={item.combination}
                    variants={itemVariants}
                    initial="hidden"
                    animate="visible"
                    transition={{ delay: index * 0.1 }}
                    className="bg-gradient-to-br from-red-900/30 to-orange-900/30 
                      rounded-lg p-4 border border-red-500/20"
                  >
                    <div className="flex items-start">
                      <span className="text-2xl mr-3">{item.icon}</span>
                      <div>
                        <h4 className="font-semibold text-gray-100">{item.combination}</h4>
                        <p className="text-gray-300 mt-1">{item.reason}</p>
                      </div>
                    </div>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.div>

      {/* –ú–∏—Ñ—ã –∏ —Ñ–∞–∫—Ç—ã */}
      <motion.div className="bg-gray-800/80 backdrop-blur-sm rounded-xl p-6 shadow-lg 
        border border-transparent hover:border-purple-500/30 transition-all duration-300">
        <button
          onClick={() => toggleSection('myths')}
          className="w-full text-left mb-4 flex items-center justify-between"
        >
          <h3 className="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r 
            from-purple-400 to-pink-400">
            –ú–∏—Ñ—ã –∏ —Ñ–∞–∫—Ç—ã
          </h3>
          <span className="text-gray-200">
            {expandedSections.includes('myths') ? '‚ñº' : '‚ñ∂'}
          </span>
        </button>
        <AnimatePresence>
          {expandedSections.includes('myths') && (
            <motion.div
              variants={sectionVariants}
              initial="hidden"
              animate="visible"
              exit="hidden"
            >
              <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                {guides.myths.map((item, index) => (
                  <motion.div
                    key={item.myth}
                    variants={itemVariants}
                    initial="hidden"
                    animate="visible"
                    transition={{ delay: index * 0.1 }}
                    className="bg-gradient-to-br from-purple-900/30 to-pink-900/30 
                      rounded-lg p-4 border border-purple-500/20"
                  >
                    <div className="flex items-start">
                      <span className="text-2xl mr-3">{item.icon}</span>
                      <div>
                        <h4 className="font-semibold text-gray-100">–ú–∏—Ñ: {item.myth}</h4>
                        <p className="text-gray-300 mt-1">–§–∞–∫—Ç: {item.fact}</p>
                      </div>
                    </div>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.div>

      {/* –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã */}
      <motion.div className="bg-gray-800/80 backdrop-blur-sm rounded-xl p-6 shadow-lg 
        border border-transparent hover:border-yellow-500/30 transition-all duration-300">
        <button
          onClick={() => toggleSection('tips')}
          className="w-full text-left mb-4 flex items-center justify-between"
        >
          <h3 className="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r 
            from-yellow-400 to-amber-400">
            –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
          </h3>
          <span className="text-gray-200">
            {expandedSections.includes('tips') ? '‚ñº' : '‚ñ∂'}
          </span>
        </button>
        <AnimatePresence>
          {expandedSections.includes('tips') && (
            <motion.div
              variants={sectionVariants}
              initial="hidden"
              animate="visible"
              exit="hidden"
            >
              <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                {guides.tips.map((tip, index) => (
                  <motion.div
                    key={tip.title}
                    variants={itemVariants}
                    initial="hidden"
                    animate="visible"
                    transition={{ delay: index * 0.1 }}
                    className="bg-gradient-to-br from-yellow-900/30 to-amber-900/30 
                      rounded-lg p-4 border border-yellow-500/20"
                  >
                    <div className="text-3xl mb-2">{tip.icon}</div>
                    <h4 className="font-semibold mb-2 text-gray-100">{tip.title}</h4>
                    <ul className="space-y-2">
                      {tip.items.map((item, i) => (
                        <li key={i} className="text-gray-300 flex items-start">
                          <span className="mr-2">‚Ä¢</span>
                          {item}
                        </li>
                      ))}
                    </ul>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.div>

      {/* –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ */}
      <motion.div className="bg-gray-800/80 backdrop-blur-sm rounded-xl p-6 shadow-lg 
        border border-transparent hover:border-indigo-500/30 transition-all duration-300">
        <button
          onClick={() => toggleSection('individual')}
          className="w-full text-left mb-4 flex items-center justify-between"
        >
          <h3 className="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r 
            from-indigo-400 to-blue-400">
            –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
          </h3>
          <span className="text-gray-200">
            {expandedSections.includes('individual') ? '‚ñº' : '‚ñ∂'}
          </span>
        </button>
        <AnimatePresence>
          {expandedSections.includes('individual') && (
            <motion.div
              variants={sectionVariants}
              initial="hidden"
              animate="visible"
              exit="hidden"
            >
              <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
                {guides.individual.map((item, index) => (
                  <motion.div
                    key={item.title}
                    variants={itemVariants}
                    initial="hidden"
                    animate="visible"
                    transition={{ delay: index * 0.1 }}
                    className="bg-gradient-to-br from-indigo-900/30 to-blue-900/30 
                      rounded-lg p-4 border border-indigo-500/20"
                  >
                    <div className="text-3xl mb-2">{item.icon}</div>
                    <h4 className="font-semibold mb-2 text-gray-100">{item.title}</h4>
                    <ul className="space-y-2">
                      {item.items.map((tip, i) => (
                        <li key={i} className="text-gray-300 flex items-start">
                          <span className="mr-2">‚Ä¢</span>
                          {tip}
                        </li>
                      ))}
                    </ul>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.div>

      {/* –ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã */}
      <motion.div className="bg-gray-800/80 backdrop-blur-sm rounded-xl p-6 shadow-lg 
        border border-transparent hover:border-rose-500/30 transition-all duration-300">
        <button
          onClick={() => toggleSection('sideEffects')}
          className="w-full text-left mb-4 flex items-center justify-between"
        >
          <h3 className="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r 
            from-rose-400 to-pink-400">
            –ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
          </h3>
          <span className="text-gray-200">
            {expandedSections.includes('sideEffects') ? '‚ñº' : '‚ñ∂'}
          </span>
        </button>
        <AnimatePresence>
          {expandedSections.includes('sideEffects') && (
            <motion.div
              variants={sectionVariants}
              initial="hidden"
              animate="visible"
              exit="hidden"
            >
              <div className="grid gap-6 md:grid-cols-2">
                {guides.sideEffects.map((item, index) => (
                  <motion.div
                    key={item.effect}
                    variants={itemVariants}
                    initial="hidden"
                    animate="visible"
                    transition={{ delay: index * 0.1 }}
                    className="bg-gradient-to-br from-rose-900/30 to-pink-900/30 
                      rounded-lg p-4 border border-rose-500/20"
                  >
                    <div className="flex items-start">
                      <span className="text-2xl mr-3">{item.icon}</span>
                      <div>
                        <h4 className="font-semibold text-gray-100">{item.effect}</h4>
                        <p className="text-gray-300 mt-1">{item.solution}</p>
                      </div>
                    </div>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.div>

      {/* –¶–µ–ª–∏ –ø—Ä–∏–µ–º–∞ */}
      <motion.div className="bg-gray-800/80 backdrop-blur-sm rounded-xl p-6 shadow-lg 
        border border-transparent hover:border-emerald-500/30 transition-all duration-300">
        <button
          onClick={() => toggleSection('goals')}
          className="w-full text-left mb-4 flex items-center justify-between"
        >
          <h3 className="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r 
            from-emerald-400 to-teal-400">
            –¶–µ–ª–∏ –ø—Ä–∏–µ–º–∞
          </h3>
          <span className="text-gray-200">
            {expandedSections.includes('goals') ? '‚ñº' : '‚ñ∂'}
          </span>
        </button>
        <AnimatePresence>
          {expandedSections.includes('goals') && (
            <motion.div
              variants={sectionVariants}
              initial="hidden"
              animate="visible"
              exit="hidden"
            >
              <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
                {guides.goals.map((item, index) => (
                  <motion.div
                    key={item.title}
                    variants={itemVariants}
                    initial="hidden"
                    animate="visible"
                    transition={{ delay: index * 0.1 }}
                    className="bg-gradient-to-br from-emerald-900/30 to-teal-900/30 
                      rounded-lg p-4 border border-emerald-500/20"
                  >
                    <div className="text-3xl mb-2">{item.icon}</div>
                    <h4 className="font-semibold mb-2 text-gray-100">{item.title}</h4>
                    <ul className="space-y-2">
                      {item.items.map((goal, i) => (
                        <li key={i} className="text-gray-300 flex items-start">
                          <span className="mr-2">‚Ä¢</span>
                          {goal}
                        </li>
                      ))}
                    </ul>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.div>
    </div>
  )
} 